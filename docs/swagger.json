{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3003",
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "login at system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login on system",
                "parameters": [
                    {
                        "description": "Login Params",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controllers.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "when bad request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorJSONResponse"
                        }
                    },
                    "406": {
                        "description": "when invalid params or invalid object",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorJSONResponse"
                        }
                    }
                }
            }
        },
        "/videos": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "List uploaded videos by logged user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "List Uploaded Videos",
                "responses": {
                    "200": {
                        "description": "token",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controllers.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/videos.ListVideosOutput"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "when bad request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorJSONResponse"
                        }
                    },
                    "406": {
                        "description": "when invalid params or invalid object",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorJSONResponse"
                        }
                    }
                }
            }
        },
        "/videos/download/{id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Downalod videos snapshot",
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "Download Videos Snapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "video ID for download",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "when bad request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorJSONResponse"
                        }
                    },
                    "406": {
                        "description": "when invalid params or invalid object",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorJSONResponse"
                        }
                    }
                }
            }
        },
        "/videos/upload": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Upload videos to snapshot",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "Upload Videos",
                "parameters": [
                    {
                        "type": "file",
                        "description": "video para upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/controllers.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/videos.VideoUploadResponseDTO"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "when bad request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorJSONResponse"
                        }
                    },
                    "406": {
                        "description": "when invalid params or invalid object",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorJSONResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.ErrorJSONResponse": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.JSONResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "videos.ListVideosOutput": {
            "type": "object",
            "properties": {
                "videos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/videos.VideoOutput"
                    }
                }
            }
        },
        "videos.VideoOutput": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mime_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "videos.VideoUploadDTO": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "videos.VideoUploadResponseDTO": {
            "type": "object",
            "properties": {
                "videos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/videos.VideoUploadDTO"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerToken": {
            "description": "Type \"Bearer\" followed by a space and JWT token like this format: Bearer {token}",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}